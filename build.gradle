plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'java'
    id 'maven'
}

group = 'me.bristermitten'
version = '1.0'

subprojects {
    apply plugin: 'java'
    tasks.withType(Jar) {
        destinationDir = file("$rootDir/build/New_libs")
    }
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven { url = 'https://papermc.io/repo/repository/maven-public/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'http://maven.sk89q.com/repo/' }
    maven { url = 'http://ci.athion.net/job/FastAsyncWorldEdit/ws/mvn/' }
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url = 'https://repo.citizensnpcs.co/' }
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    implementation "com.github.MilkBowl:VaultAPI:1.7"
    implementation 'com.boydti:fawe-api:latest'
    implementation('com.sk89q.worldedit:worldedit-bukkit:6.1.4-SNAPSHOT') {
        exclude group: 'org.bukkit'
    }
    implementation 'com.sk89q.worldguard:worldguard-legacy:6.1.3-SNAPSHOT'
    implementation "co.aikar:acf-paper:0.5.0-SNAPSHOT"
    implementation 'net.citizensnpcs:citizens:2.0.25-SNAPSHOT'
    implementation files("lib/AutoSellAPI-1.2.0.jar")
    implementation files("lib/privatemines-1.0.jar")
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}


/**
 * This adds a -parameter flag to the `javac` command that's run so ACF can make meaningful help messages
 */
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
}


shadowJar {
    relocate 'co.aikar', 'me.bristermitten.aikar'
    minimize()
    exclude '.classpath', '.project'
    dependencies {
        include(dependency('co.aikar:.*'))
        include(dependency('.*:expiringmap'))
        exclude(dependency(files('lib/AutoSellAPI-1.2.0.jar')))
    }
}

build.dependsOn shadowJar

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

task copyJar() {
    copy {
        from "F://Coding//JavaCoding//privateminesprivate//lib//privatemines-1.0.jar"
        into "F://Working Private Mines Server//plugins"
    }
}
