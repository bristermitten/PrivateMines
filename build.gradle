subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'me.bristermitten'
    version = '1.6.1-b' // Change this for the versioning

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        maven { url = 'https://papermc.io/repo/repository/maven-public/' }
        maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    }

    defaultTasks 'build', 'shadowJar'


    dependencies {
        compileOnly 'org.jetbrains:annotations:20.1.0'
    }

    test {
        useJUnitPlatform()
    }

    //publishing boilerplate
    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    publishing {
        repositories {
            maven {
                def releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-releases"
                def snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username project.hasProperty('mavenUser') ? mavenUser : System.getenv('MAVEN_USER')
                    password project.hasProperty('mavenPassword') ? mavenPassword : System.getenv('MAVEN_PASSWORD')
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}
